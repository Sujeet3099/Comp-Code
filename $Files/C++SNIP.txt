{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Competetive Code C++": {
    "prefix": "compcode",
    "body": [
      "#include \"bits/stdc++.h\"",
      "using namespace std;",
      "",
      "/**",
      " * Copyright (c)",
      " * author        :   Sujeet Kumar ",
      " * question name :   ",
      " * link          :   ",
      " */",
      "",
      "#define ll long long",
      "#define ull unsigned long long",
      "#define pb push_back",
      "#define mp make_pair",
      "#define pi pair<int, int>",
      "#define fi first",
      "#define se second",
      "#define all(x) (x).begin(), (x).end()",
      "#define rep(i, a, n) for (int i = a; i < n; i++)",
      "#define repA(i, v) for (auto i : v)",
      "#define per(i, a, n) for (int i = n - 1; i >= a; i--)",
      "#define vi vector<int>",
      "#define vll vector<ll>",
      "#define vi2(n, m) vector<vector<int> > v(n, vector<int>(m));",
      "",
      "#define MOD 1000000007",
      "",
      "void solve() {",
      // "    // code goes here",
      "    $0",
      "    return;",
      "}",
      "",
      "int main() {",
      "    ios_base::sync_with_stdio(false);",
      "    cin.tie(NULL);",
      "    clock_t start = clock();",
      "",
      "    ll test = 1;",
      "    cin >> test;",
      "    while (test--) solve();",
      "",
      "    clock_t end = clock();",
      "    cerr << fixed << setprecision(15) << ((double)(end - start)) / CLOCKS_PER_SEC;",
      "    return 0;",
      "}",
      "/**",
      " * Test Cases:-",
      " */",
      ""
    ],
    "description": "Competetive Code C++"
  }
}
